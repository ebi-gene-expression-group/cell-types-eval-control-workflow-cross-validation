profiles {

    standard {
        process.executor = 'local'
    }

    cluster{
        process.executor='lsf'
        process.queue='production-rh74'
        process.clusterOptions = '-R \"select[hname!=\'hx-noah-05-02\']\"'

        executor.queueSize=1000
        executor.perJobMemLimit=false
        executor.exitReadTimeout='100000 sec'
        executor.pollInterval = '5sec'

        //conda.cacheDir = "${baseDir}/envs" // TODO: sort out this path 
        conda.createTimeout = "30 min"
    } 
}

params {
	//child workflow profie
	profile = "standard"
	//output directories
	output_dir = "${baseDir}/outputs"
	label_analysis_dir = "${baseDir}/label_analysis_output"

	//input data
	data_dir = "${baseDir}/data"
	data_10X = "$data_dir/data_10X"
	condensed_sdrf="$data_dir/unmelted_sdrf.tsv"
	markers_metadata="$data_dir/E-MTAB-6386.marker_genes_11.tsv"
	
	//data download parameters
	download_data{
        	run = "True" // must be 'True' or 'False'      
        	expr_data_type = "normalised"
        	normalisation_method = "TPM"
        	
		      query_acc_code = "E-MTAB-6386"
        	query_output_dir = "${query_acc_code}" //name data dir by dataset name
        	//query_output_dir = "query_data"
        	query_num_clust = 19 
	}
	
	unmelt_sdrf {
		retain_types = "TRUE"
	}
	// disable child workflow data download
	data_download{
		run = "False"
	}
	//fold generation parameters
	generate_folds{
		folds_k=5
		output_cell_indexes="output_cell_indexes.rds"
	}
	
	//enable disable cell predictors
	scpred{
		run = "True" // must be 'True' or 'False'
		method = "prediction" //must be 'evaluation' or 'prediction'
	}	
	scmap_cluster{
		run = "True" // must be 'True' or 'False'
	}	
	scmap_cell{
		run = "True" // must be 'True' or 'False'
	}	
	garnett{
		run = "True" // must be 'True' or 'False'
		pval_col = "pvals"
        	groups_col = "cluster"
        	gene_names = "genes"
	}	
	
	//workflow output file names
	average_folds_output{
		avg_tool_perf_table="avg_tool_perf_table.tsv"
		avg_tool_perf_pvals="avg_tool_perf_pvals.tsv"
	}
}

env { 
    CROSSVAL_WORKFLOW_ROOT = "${baseDir}"
    CROSSVAL_WORKFLOW_BRANCH = 'origin/feature/child_params_from_parent_wf'
    CONTROL_WORKFLOW = "${baseDir}/cell-types-eval-control-workflow"
    CONTROL_CONFIG = "${baseDir}/nextflow.config"
}
