profiles {

    standard {
        process.executor = 'local'
    }

    cluster{
        process.executor='lsf'
        process.queue='production-rh74'
        process.clusterOptions = '-R \"select[hname!=\'hx-noah-05-02\']\"'

        executor.queueSize=1000
        executor.perJobMemLimit=false
        executor.exitReadTimeout='100000 sec'
        executor.pollInterval = '5sec'

        //conda.cacheDir = "${baseDir}/envs" // TODO: sort out this path 
        conda.createTimeout = "30 min"
    } 
}

params {
	//child workflow profile
	profile = "cluster"
	
	//output directories
	output_dir = "${baseDir}/results"
	
	//data import	
	download_data {
		run = "True"
        	import_datasets="${baseDir}/datasets.txt"
        	scxa_import_config_file="${baseDir}/data/scxa_import_config.yaml"
        	get_sdrf = "TRUE"
        	get_cond_sdrf = "TRUE"
        	get_idf = "TRUE"
        	get_marker_genes = "TRUE"
	}	
	
	metadata {
		query_barcode_col_name = "id" // cell id column 
		query_label_col_name = "Factor.inferred.cell.type." // query label column 
		query_CL_col_name = "Factor.inferred.cell.type..ontology" // cell ontology column
		
		ref_barcode_col_name = "id" // cell id column 
		ref_label_col_name = "Factor.inferred.cell.type." // reference label column 
		ref_CL_col_name = "Factor.inferred.cell.type..ontology" // cell ontology column 
	}
	
	unmelt_sdrf {
		run = "True"
		retain_types = "TRUE"
	}
	// disable child workflow data download, to allow k-fold data to be passed.
	data_import {
		run = "False"
	}
	
	//fold generation parameters
	generate_folds {
		folds_k=5
		output_cell_indexes="output_cell_indexes.rds"
	}
	// run nested workflow
	run_predictors {
		tool_perf_table = "tool_perf_table.tsv"
		tool_perf_pvals = "tool_perf_pvals.tsv"	
	}
	
	//enable-disable and parametrise cell predictors 
	scpred {
		run = "True" // must be 'True' or 'False'
		matrix_type = "CPM" // must be either "raw", "filtered", "TPM" or "CPM" (NB: TPM is only relevant for smart-seq based  experiments; CPM matrices will be downloaded for droplet-based experiments by default)
		method = "prediction" //must be 'evaluation' or 'prediction'
		model = 'svmRadialWeights' 
	}	
	scmap_cluster {
		run = "False" // must be 'True' or 'False'
		matrix_type = "TPM" // must be either "raw", "filtered", "TPM" or "CPM"
	}	
	scmap_cell {
		run = "True" // must be 'True' or 'False'
		matrix_type = "TPM" // must be either "raw", "filtered", "TPM" or "CPM"
	}	
	garnett {
		run = "False" // must be 'True' or 'False'
		matrix_type = "CPM" // must be either "raw", "filtered", "TPM" or "CPM" 
		pval_col = "pvals"
        	groups_col = "cluster"
        	gene_names = "genes"
	}	
  
	label_analysis {
		run = "True" // must be 'True' or 'False'
		num_iter=10 // number of iteration for label analysis permutation test
	}	

}

env { 
    CROSSVAL_WORKFLOW_ROOT = "${baseDir}"
    CROSSVAL_WORKFLOW_BRANCH = 'origin/develop'
    CONTROL_WORKFLOW = "${baseDir}/cell-types-eval-control-workflow"
    CONTROL_CONFIG = "${baseDir}/cell-types-eval-control-workflow/nextflow.config"
}
